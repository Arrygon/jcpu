%!PS-Adobe-3.0
%%Creator: gEDA gschem 1.8.1-20121123-13-g875406c
%%CreationDate: Thu Sep 21 14:10:46 2017
%%Title: /home/james/register.sch
%%Author: james
%%BoundingBox: 0 0 595 841
%%Orientation: Landscape
%%Pages: 1
%%EndComments
%%BeginProlog
% Prolog for gEDA, define all the functions needed for rendering
% schematics on Postscript devices


% Draw a line from the second coordinate to the first
% x2 y2 x1 y1 width line -
/line {
    setlinewidth
    % pop off first element and moveto
    moveto
    % pop off remaining elements and draw a line segment
    lineto
    % draw it
    stroke
} bind def


% Draw a dot
% x y r dot -
/dot {
    0 360 arc fill
} bind def

% Draw a dot-dashed line, a bunch of lined segments,
% if the array element only has length two, draw a dot.
% [ [x2 y2 x1 y1] [x4 y4 x3 y3] [x5 y5] ... ] width dashed -
/width 0 def
/dashed {
    dup 2.0 div /width exch def
    setlinewidth
    % pop off each line segment and draw it as a dot or as a line
    {
	aload length 2 gt
	{ moveto lineto stroke}
	{ width dot } ifelse
    } forall
} bind def

% Draw an arc segment
% x y r ang1 ang2 width darc -
/darc {
    setlinewidth
    arc stroke
} bind def

% Draw a series of arc segment bits, if the array element only has a single
% element in it, draw a dot.
% [ [sa1 ea1] [sa2 ea2] ... ] x y r width dashedarc -
/x 0 def
/y 0 def
/dashedarc {
    dup /width exch def
    setlinewidth
    /r exch def  
    /y exch def
    /x exch def
    { aload length 1 gt
	{
	    % this element had two angles in it
	    % extract start and stop angles
	    x y r   % drop x y and r onto stack
		    % at this point we have: sa ea x y r
		    % we need                      x y r sa ea
		    % so..
	    5 -2 roll
	    % and add it to the current path, and draw it
	    arc stroke
	} {
	    % this element only had one angle in it, place a
	    % filled dot at the appropriate place
	    % compute center point of the arc using the angle
	    % that is on the top of the stack
	    dup   		% angle angle
	    cos r mul x add 	% angle x
	    exch		% x angle
	    sin r mul y add	% x y
	    width		% x y width/2
	    dot			% draw the dot
	} ifelse
    } forall

    % Now draw it
    stroke
} bind def

% Draw a box
% width height x y linethickness box -
/box {
    setlinewidth
    moveto
    exch dup 0 rlineto	 % w h, h w w 0      -- Draw bottom line
    exch 0 exch rlineto	 % h w, w h 0, w 0 h -- Draw right line 
    neg 0 rlineto	 % w, -w 0           -- Draw Top line
    closepath		 % finish and draw it
    stroke
} bind def			     

% Draw a filled box
% width height x y fbox -
/fbox {
    moveto
    exch dup 0 rlineto	
    exch 0 exch rlineto	
    neg 0 rlineto		
    closepath			
    fill			
} bind def

% Font reincoding utilities

% ISOLatin1Encoding, extended with remaining uncoded glyphs
/ISOLatin1Extended [
    /.notdef /Lslash /lslash /OE /oe /Scaron /scaron /Zcaron /zcaron
    /Ydieresis /trademark /bullet /dagger /daggerdbl /ellipsis /emdash
    /endash /fi /fl /florin /fraction /guilsinglleft /guilsinglright
    /perthousand /quotedblbase /quotedblleft /quotedblright
    /quotesinglbase /quotesingle /.notdef /.notdef /.notdef /space
    /exclam /quotedbl /numbersign /dollar /percent /ampersand
    /quoteright /parenleft /parenright /asterisk /plus /comma /minus
    /period /slash /zero /one /two /three /four /five /six /seven /eight
    /nine /colon /semicolon /less /equal /greater /question /at /A /B /C
    /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z
    /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s
    /t /u /v /w /x /y /z /braceleft /bar /braceright /asciitilde
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /dotlessi /grave /acute /circumflex
    /tilde /macron /breve /dotaccent /dieresis /.notdef /ring /cedilla
    /.notdef /hungarumlaut /ogonek /caron /space /exclamdown /cent
    /sterling /currency /yen /brokenbar /section /dieresis /copyright
    /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
    /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown /Agrave /Aacute
    /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla /Egrave /Eacute
    /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth
    /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
    /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
    /ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave
    /iacute /icircumflex /idieresis /eth /ntilde /ograve /oacute
    /ocircumflex /otilde /odieresis /divide /oslash /ugrave /uacute
    /ucircumflex /udieresis /yacute /thorn /ydieresis
] def

% `new-font-name' `encoding-vector' `old-font-name' RE -
/RE {
    findfont
    dup maxlength dict begin {
        1 index /FID ne { def } { pop pop } ifelse
    } forall
    /Encoding exch def
    dup /FontName exch def
    currentdict end definefont pop
} bind def

% Text handling functions, select the font and scale it, then we need
% only to apply the appropriate transformations to get the text
% justified into the right spots.  The bad thing here is that we don't
% do any kerning, so the output may look a bit strange.

% compute the height of one character and return lly and ury
% (char) charheight lly ury
/charheight {
    gsave			% push graphics state
	newpath			% clear current path
	0 0 moveto		% Set current point
	false charpath		% get path
	flattenpath		% flatten path
	pathbbox		% stack = llx lly urx ury
	exch pop		% stack = llx lly ury
	3 -1 roll pop		% stack = lly ury
    grestore			% pop graphics state
} bind def

% compute the height of a string, one character at a time
% (string) stringheight lly ury
/lly 0.0 def
/ury 0.0 def

/stringheight {
    /lly 0.0 def			% initial value of heightmin
    /ury 0.0 def			% initial value of heightmax
    {				% work through string
	( ) dup 0 4 -1 roll put	% create one character string
	charheight		% measure it's height
	dup ury gt {		% if ury gt heightmax
	    /ury exch def	% update with new value
	} {
	    pop			% else discard ury
	} ifelse
	dup lly lt {		% if lly lt heightmin
	    /lly exch def	% update with new value
	} {
	    pop			% else discard lly
	} ifelse
    } forall
    lly ury			% Return the results
} bind def

% calculate the string width taking into account the escapes.
/mystrx 0.0 def
/mystry 0.0 def
/mystresc false def

/mystringwidth {
    /mystrx 0.0 def
    /mystry 0.0 def
    /mystresc false def
    {				% work through string
	% did we process the escape character last?
	mystresc {
	    % last character was escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
		% toggle drawing overbars
		0.0 0.0 % make it like it never happened...
	    } {
		% otherwise measure the character 
		(\\ ) dup 1 4 -1 roll put % count a \ and the character
		stringwidth
	    } ifelse
	    % and reset the flag
	    /mystresc false def
	} {
	    % last character was not escape
	    % is this escape
	    dup 92 eq {
		% yes, escape character, set flag
		/mystresc true def
		pop % drop character
		0.0 0.0 % make like this character has no width and height
	    } {
		( ) dup 0 4 -1 roll put	% create one character string
		stringwidth		% measure it's height/width
	    } ifelse
	} ifelse
	% accumulate x and y movements
	mystry add /mystry exch def
	mystrx add /mystrx exch def
    } forall
    mystrx mystry % drop results on stack
} bind def

% Render a string with overbars
%
/escaped false def
/drawoverbar false def
/fontsize 0.0 def

%string1 string2 append -
/append {
    2 copy length exch length add % find new length
    string dup % string1 string2 string string
    4 2 roll % string string string1 string2
    2 index 0 3 index
    % string string string1 string2 string 0 string1
    putinterval % string string string1 string2
    exch length exch putinterval
} bind def

% If drawoverbar is set, draw a line of the same length as the given string
% string overbarshowline -
/overbarshowline {
    % print overbar if necessary
    stringwidth pop 0
    drawoverbar {
        rlineto
        gsave stroke grestore
    } {
        rmoveto
    } ifelse
} bind def

% Draws overbars for the given string, then shows the string itself
% string overbarshow
/overbarshow {
    /overbarshowacc () def
    /overbarshowtxt () def

    gsave
    fontsize 10.0 div setlinewidth
    0 fontsize rmoveto  % move to (0,overbarheight)

    {				% work through string
	escaped {
	    % the last character was the escape
	    % handle the escape
	    % is it an _ = 95?
	    dup 95 eq {
		pop  % we don't need the character anymore
                overbarshowacc overbarshowline
                % toggle drawing overbars
		/drawoverbar drawoverbar not def

                % Append the contents off the accumulator to the text
                % string we're eventually going to show
                /overbarshowtxt overbarshowtxt overbarshowacc append def

                % clear accumulator
                /overbarshowacc () def
	    } {
                % add to accumulator
                (\\ ) dup 1 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	    % and reset the flag
	    /escaped false def
	} {
	    % check for escape character \ = 92
	    dup 92 eq {
		% yes, escape character, set flag
		/escaped true def
		pop % drop character
	    } {
                % add to accumulator
                ( ) dup 0 4 -1 roll put
                overbarshowacc exch append
                /overbarshowacc exch def
	    } ifelse
	} ifelse
    } forall
    % Catch any leftovers
    overbarshowacc overbarshowline
    overbarshowtxt overbarshowacc append

    grestore
    show
} bind def

% 
% hcenter rjustify vcenter vjustify spacing [(line1) (line2) ... ] rot x y size text -
/stringw 0.0 def
/stringh 0.0 def
/spacing 0.0 def
/strings [ ] def
/stringtxt ( ) def
/stringcount 0 def
/rot 0.0 def

/text {
    gsave	        % save state for later
    /drawoverbar false def      % start by not drawing overbars

    dup /fontsize exch def  % save font size for corrections later
    % do font selection 
    /gEDAFont findfont
    exch scalefont
    setfont

    % set up coordinates
    translate           % move origin to given point
    rotate		% rotate so that text is drawn
    0 0 moveto
    dup length /stringcount exch def			% Get number of strings
    /strings exch def     				% save strings
    /spacing exch def
    % do we have more than 1 string to render?
    stringcount 1 eq {
	/stringtxt strings aload pop def		% get the string 
	/stringw stringtxt mystringwidth pop neg def	% get the -width
	/stringh stringtxt stringheight exch pop neg def% get the -height

	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh rmoveto } if 
	% vertical center
	{ 0 stringh 0.3571425 mul rmoveto } if  % not 0.5, so that
						% it looks nicer
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% Draw the text
	stringtxt overbarshow
    } {
	% More than one line, compute bounding box for the text

	% vertical height, don't use the actual hieght of the characters
	% assume that the user wants to make the baselines line up with two
	% text boxes placed side by side
	/stringh stringcount spacing mul neg def
	% Now figure out horizontal size, this amounts to keeping track
	% of the longest string
	/stringw 0.0 def
	strings {
	    mystringwidth pop
	    dup stringw gt {
		/stringw exch def
	    } {
		pop
	    } ifelse
	} forall
	/stringw stringw neg def 	% get the -width
	
	% First do vertical calculations
	% hcenter rjustify vcenter vjustify 
	% vertical justification
	{ 0 stringh fontsize add rmoveto } if 
	% vertical center
	{ 0 stringh 0.5 mul rmoveto } if 
	% Then do horizontal calculations
	% right justify
	{ stringw 0 rmoveto } if
	% center
	{ stringw 2.0 div 0 rmoveto } if
	% now move up to the first line and begin rendering
	0 stringcount 1 sub spacing mul rmoveto
	strings {
	    gsave		% Save starting point
	    overbarshow		% render the text
	    grestore
	    0 spacing neg rmoveto
	} forall
    } ifelse
    grestore 	% Restore old state
} bind def


%%EndProlog
%%Page: 1 1
/gEDAFont ISOLatin1Extended /Helvetica RE
2 setlinecap
0.072000 0.072000 scale
7894 647 translate 90 rotate
1.233592 1.233592 scale
-31100 -41510 translate
gsave
38700 43800 38700 44100 10 line
gsave
false true false false 161.777776 [(1) ] 90 38650 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(DIR) ] 90 38700 44150 144.444443 text
grestore
36000 43800 36000 44100 10 line
gsave
false true false false 161.777776 [(2) ] 90 35950 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(A1) ] 90 36000 44150 144.444443 text
grestore
36300 43800 36300 44100 10 line
gsave
false true false false 161.777776 [(3) ] 90 36250 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(A2) ] 90 36300 44150 144.444443 text
grestore
36600 43800 36600 44100 10 line
gsave
false true false false 161.777776 [(4) ] 90 36550 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(A3) ] 90 36600 44150 144.444443 text
grestore
36900 43800 36900 44100 10 line
gsave
false true false false 161.777776 [(5) ] 90 36850 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(A4) ] 90 36900 44150 144.444443 text
grestore
37200 43800 37200 44100 10 line
gsave
false true false false 161.777776 [(6) ] 90 37150 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(A5) ] 90 37200 44150 144.444443 text
grestore
37500 43800 37500 44100 10 line
gsave
false true false false 161.777776 [(7) ] 90 37450 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(A6) ] 90 37500 44150 144.444443 text
grestore
37800 43800 37800 44100 10 line
gsave
false true false false 161.777776 [(8) ] 90 37750 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(A7) ] 90 37800 44150 144.444443 text
grestore
38100 43800 38100 44100 10 line
gsave
false true false false 161.777776 [(9) ] 90 38050 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(A8) ] 90 38100 44150 144.444443 text
grestore
38400 44050 50 0 360 10 darc
38400 43800 38400 44000 10 line
gsave
false true false false 161.777776 [(19) ] 90 38350 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(\\_ENABLE\\_) ] 90 38400 44150 144.444443 text
grestore
36000 45500 36000 45800 10 line
gsave
false false false false 161.777776 [(18) ] 90 35950 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(B1) ] 90 36000 45450 144.444443 text
grestore
36300 45500 36300 45800 10 line
gsave
false false false false 161.777776 [(17) ] 90 36250 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(B2) ] 90 36300 45450 144.444443 text
grestore
36600 45500 36600 45800 10 line
gsave
false false false false 161.777776 [(16) ] 90 36550 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(B3) ] 90 36600 45450 144.444443 text
grestore
36900 45500 36900 45800 10 line
gsave
false false false false 161.777776 [(15) ] 90 36850 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(B4) ] 90 36900 45450 144.444443 text
grestore
37200 45500 37200 45800 10 line
gsave
false false false false 161.777776 [(14) ] 90 37150 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(B5) ] 90 37200 45450 144.444443 text
grestore
37500 45500 37500 45800 10 line
gsave
false false false false 161.777776 [(13) ] 90 37450 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(B6) ] 90 37500 45450 144.444443 text
grestore
37800 45500 37800 45800 10 line
gsave
false false false false 161.777776 [(12) ] 90 37750 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(B7) ] 90 37800 45450 144.444443 text
grestore
38100 45500 38100 45800 10 line
gsave
false false false false 161.777776 [(11) ] 90 38050 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(B8) ] 90 38100 45450 144.444443 text
grestore
35700 44100 38900 44100 10 line
38900 44100 38900 45500 10 line
38900 45500 35700 45500 10 line
35700 45500 35700 44100 10 line
gsave
false false false false 202.222224 [(74245) ] 90 35660 44100 180.555557 text
grestore
grestore
gsave
false true false false 202.222224 [(BUF) ] 90 35600 45500 180.555557 text
grestore
gsave
34600 43800 34600 44000 10 line
gsave
false true false false 161.777776 [(1) ] 90 34550 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(\\_E\\_) ] 90 34600 44150 144.444443 text
grestore
32200 43800 32200 44100 10 line
gsave
false true false false 161.777776 [(3) ] 90 32150 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(1D) ] 90 32200 44150 144.444443 text
grestore
32500 43800 32500 44100 10 line
gsave
false true false false 161.777776 [(4) ] 90 32450 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(2D) ] 90 32500 44150 144.444443 text
grestore
32800 43800 32800 44100 10 line
gsave
false true false false 161.777776 [(7) ] 90 32750 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(3D) ] 90 32800 44150 144.444443 text
grestore
33100 43800 33100 44100 10 line
gsave
false true false false 161.777776 [(8) ] 90 33050 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(4D) ] 90 33100 44150 144.444443 text
grestore
33400 43800 33400 44100 10 line
gsave
false true false false 161.777776 [(13) ] 90 33350 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(5D) ] 90 33400 44150 144.444443 text
grestore
33700 43800 33700 44100 10 line
gsave
false true false false 161.777776 [(14) ] 90 33650 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(6D) ] 90 33700 44150 144.444443 text
grestore
34000 43800 34000 44100 10 line
gsave
false true false false 161.777776 [(17) ] 90 33950 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(7D) ] 90 34000 44150 144.444443 text
grestore
34300 43800 34300 44100 10 line
gsave
false true false false 161.777776 [(18) ] 90 34250 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(8D) ] 90 34300 44150 144.444443 text
grestore
32200 45500 32200 45800 10 line
gsave
false false false false 161.777776 [(2) ] 90 32150 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(1Q) ] 90 32200 45450 144.444443 text
grestore
32500 45500 32500 45800 10 line
gsave
false false false false 161.777776 [(5) ] 90 32450 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(2Q) ] 90 32500 45450 144.444443 text
grestore
32800 45500 32800 45800 10 line
gsave
false false false false 161.777776 [(6) ] 90 32750 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(3Q) ] 90 32800 45450 144.444443 text
grestore
33100 45500 33100 45800 10 line
gsave
false false false false 161.777776 [(9) ] 90 33050 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(4Q) ] 90 33100 45450 144.444443 text
grestore
33400 45500 33400 45800 10 line
gsave
false false false false 161.777776 [(12) ] 90 33350 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(5Q) ] 90 33400 45450 144.444443 text
grestore
33700 45500 33700 45800 10 line
gsave
false false false false 161.777776 [(15) ] 90 33650 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(6Q) ] 90 33700 45450 144.444443 text
grestore
34000 45500 34000 45800 10 line
gsave
false false false false 161.777776 [(16) ] 90 33950 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(7Q) ] 90 34000 45450 144.444443 text
grestore
34300 45500 34300 45800 10 line
gsave
false false false false 161.777776 [(19) ] 90 34250 45600 144.444443 text
grestore
gsave
false true false false 161.777776 [(8Q) ] 90 34300 45450 144.444443 text
grestore
31900 44100 35100 44100 10 line
35100 44100 35100 45500 10 line
35100 45500 31900 45500 10 line
31900 45500 31900 44100 10 line
34600 44050 50 0 360 10 darc
34900 43800 34900 44100 10 line
gsave
false true false false 161.777776 [(11) ] 90 34850 44000 144.444443 text
grestore
gsave
false false false false 161.777776 [(CLK) ] 90 34900 44175 144.444443 text
grestore
gsave
false false false false 202.222224 [(74377) ] 90 31860 44100 180.555557 text
grestore
34900 44175 34850 44100 10 line
34900 44175 34950 44100 10 line
grestore
gsave
false true false false 202.222224 [(REG) ] 90 31800 45500 180.555557 text
grestore
38100 45800 38100 45900 10 line
37800 45800 37800 46000 10 line
37500 45800 37500 46100 10 line
37200 45800 37200 46200 10 line
36900 45800 36900 46300 10 line
36600 45800 36600 46400 10 line
36300 45800 36300 46500 10 line
36000 45800 36000 46600 10 line
36000 43800 36000 43600 10 line
32200 43600 39200 43600 10 line
36300 43800 36300 43400 10 line
32500 43400 39200 43400 10 line
36600 43800 36600 43200 10 line
32800 43200 39200 43200 10 line
36900 43800 36900 43000 10 line
33100 43000 39200 43000 10 line
37200 43800 37200 42800 10 line
33400 42800 39200 42800 10 line
37500 43800 37500 42600 10 line
33700 42600 39200 42600 10 line
37800 43800 37800 42400 10 line
34000 42400 39200 42400 10 line
38100 43800 38100 42200 10 line
34300 42200 39200 42200 10 line
34300 45800 34300 46700 10 line
34300 45900 38100 45900 10 line
34000 45800 34000 46700 10 line
34000 46000 37800 46000 10 line
33700 45800 33700 46700 10 line
33700 46100 37500 46100 10 line
33400 45800 33400 46700 10 line
33400 46200 37200 46200 10 line
33100 45800 33100 46700 10 line
33100 46300 36900 46300 10 line
32800 45800 32800 46700 10 line
32800 46400 36600 46400 10 line
32500 45800 32500 46700 10 line
32500 46500 36300 46500 10 line
32200 45800 32200 46700 10 line
32200 46600 36000 46600 10 line
32200 43800 32200 43600 10 line
32500 43800 32500 43400 10 line
32800 43800 32800 43200 10 line
33100 43800 33100 43000 10 line
33400 43800 33400 42800 10 line
33700 43800 33700 42600 10 line
34000 43800 34000 42400 10 line
34300 43800 34300 42200 10 line
34900 43800 35200 43800 10 line
35200 43800 35200 46900 10 line
35200 46900 38200 46900 10 line
38200 46900 38200 47200 10 line
34600 43800 34600 43700 10 line
34600 43700 35400 43700 10 line
35400 43700 35400 46800 10 line
35400 46800 38600 46800 10 line
38600 46800 38600 47200 10 line
38400 43800 38400 43700 10 line
38400 43700 39000 43700 10 line
39000 43700 39000 47200 10 line
gsave
false false false false 202.222224 [(D7) ] 0 39300 43500 180.555557 text
grestore
gsave
false false false false 202.222224 [(D6) ] 0 39300 43300 180.555557 text
grestore
gsave
false false false false 202.222224 [(D5) ] 0 39300 43100 180.555557 text
grestore
gsave
false false false false 202.222224 [(D4) ] 0 39300 42900 180.555557 text
grestore
gsave
false false false false 202.222224 [(D3) ] 0 39300 42700 180.555557 text
grestore
gsave
false false false false 202.222224 [(D2) ] 0 39300 42500 180.555557 text
grestore
gsave
false false false false 202.222224 [(D1) ] 0 39300 42300 180.555557 text
grestore
gsave
false false false false 202.222224 [(D0) ] 0 39300 42100 180.555557 text
grestore
gsave
34300 46700 34300 46900 10 line
gsave
false true false false 161.777776 [(1) ] 90 34250 46850 144.444443 text
grestore
34300 47600 34300 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 34250 47450 144.444443 text
grestore
34200 47100 34300 47200 10 line
34300 47200 34400 47100 10 line
34200 47100 34400 47100 10 line
34200 47200 34400 47200 10 line
34300 47200 34300 47400 10 line
34300 47100 34300 46900 10 line
34300 47150 200 0 360 10 darc
33997 47216 33896 47317 10 line
33896 47317 33945 47321 10 line
33945 47321 33843 47422 10 line
34082 47184 33982 47285 10 line
33982 47285 34031 47289 10 line
34031 47289 33930 47390 10 line
grestore
gsave
34000 46700 34000 46900 10 line
gsave
false true false false 161.777776 [(1) ] 90 33950 46850 144.444443 text
grestore
34000 47600 34000 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 33950 47450 144.444443 text
grestore
33900 47100 34000 47200 10 line
34000 47200 34100 47100 10 line
33900 47100 34100 47100 10 line
33900 47200 34100 47200 10 line
34000 47200 34000 47400 10 line
34000 47100 34000 46900 10 line
34000 47150 200 0 360 10 darc
33697 47216 33596 47317 10 line
33596 47317 33645 47321 10 line
33645 47321 33543 47422 10 line
33782 47184 33682 47285 10 line
33682 47285 33731 47289 10 line
33731 47289 33630 47390 10 line
newpath
34000 47600
25
0 360 arc
fill
newpath
34000 47600
25
0 360 arc
fill
grestore
gsave
33700 46700 33700 46900 10 line
gsave
false true false false 161.777776 [(1) ] 90 33650 46850 144.444443 text
grestore
33700 47600 33700 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 33650 47450 144.444443 text
grestore
33600 47100 33700 47200 10 line
33700 47200 33800 47100 10 line
33600 47100 33800 47100 10 line
33600 47200 33800 47200 10 line
33700 47200 33700 47400 10 line
33700 47100 33700 46900 10 line
33700 47150 200 0 360 10 darc
33397 47216 33296 47317 10 line
33296 47317 33345 47321 10 line
33345 47321 33243 47422 10 line
33482 47184 33382 47285 10 line
33382 47285 33431 47289 10 line
33431 47289 33330 47390 10 line
newpath
33700 47600
25
0 360 arc
fill
newpath
33700 47600
25
0 360 arc
fill
grestore
gsave
33400 46700 33400 46900 10 line
gsave
false true false false 161.777776 [(1) ] 90 33350 46850 144.444443 text
grestore
33400 47600 33400 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 33350 47450 144.444443 text
grestore
33300 47100 33400 47200 10 line
33400 47200 33500 47100 10 line
33300 47100 33500 47100 10 line
33300 47200 33500 47200 10 line
33400 47200 33400 47400 10 line
33400 47100 33400 46900 10 line
33400 47150 200 0 360 10 darc
33097 47216 32996 47317 10 line
32996 47317 33045 47321 10 line
33045 47321 32943 47422 10 line
33182 47184 33082 47285 10 line
33082 47285 33131 47289 10 line
33131 47289 33030 47390 10 line
newpath
33400 47600
25
0 360 arc
fill
newpath
33400 47600
25
0 360 arc
fill
grestore
gsave
33100 46700 33100 46900 10 line
gsave
false true false false 161.777776 [(1) ] 90 33050 46850 144.444443 text
grestore
33100 47600 33100 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 33050 47450 144.444443 text
grestore
33000 47100 33100 47200 10 line
33100 47200 33200 47100 10 line
33000 47100 33200 47100 10 line
33000 47200 33200 47200 10 line
33100 47200 33100 47400 10 line
33100 47100 33100 46900 10 line
33100 47150 200 0 360 10 darc
32797 47216 32696 47317 10 line
32696 47317 32745 47321 10 line
32745 47321 32643 47422 10 line
32882 47184 32782 47285 10 line
32782 47285 32831 47289 10 line
32831 47289 32730 47390 10 line
newpath
33100 47600
25
0 360 arc
fill
newpath
33100 47600
25
0 360 arc
fill
grestore
gsave
32800 46700 32800 46900 10 line
gsave
false true false false 161.777776 [(1) ] 90 32750 46850 144.444443 text
grestore
32800 47600 32800 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 32750 47450 144.444443 text
grestore
32700 47100 32800 47200 10 line
32800 47200 32900 47100 10 line
32700 47100 32900 47100 10 line
32700 47200 32900 47200 10 line
32800 47200 32800 47400 10 line
32800 47100 32800 46900 10 line
32800 47150 200 0 360 10 darc
32497 47216 32396 47317 10 line
32396 47317 32445 47321 10 line
32445 47321 32343 47422 10 line
32582 47184 32482 47285 10 line
32482 47285 32531 47289 10 line
32531 47289 32430 47390 10 line
newpath
32800 47600
25
0 360 arc
fill
newpath
32800 47600
25
0 360 arc
fill
grestore
gsave
32500 46700 32500 46900 10 line
gsave
false true false false 161.777776 [(1) ] 90 32450 46850 144.444443 text
grestore
32500 47600 32500 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 32450 47450 144.444443 text
grestore
32400 47100 32500 47200 10 line
32500 47200 32600 47100 10 line
32400 47100 32600 47100 10 line
32400 47200 32600 47200 10 line
32500 47200 32500 47400 10 line
32500 47100 32500 46900 10 line
32500 47150 200 0 360 10 darc
32197 47216 32096 47317 10 line
32096 47317 32145 47321 10 line
32145 47321 32043 47422 10 line
32282 47184 32182 47285 10 line
32182 47285 32231 47289 10 line
32231 47289 32130 47390 10 line
newpath
32500 47600
25
0 360 arc
fill
newpath
32500 47600
25
0 360 arc
fill
grestore
gsave
32200 46700 32200 46900 10 line
gsave
false true false false 161.777776 [(1) ] 90 32150 46850 144.444443 text
grestore
32200 47600 32200 47400 10 line
gsave
false false false false 161.777776 [(2) ] 90 32150 47450 144.444443 text
grestore
32100 47100 32200 47200 10 line
32200 47200 32300 47100 10 line
32100 47100 32300 47100 10 line
32100 47200 32300 47200 10 line
32200 47200 32200 47400 10 line
32200 47100 32200 46900 10 line
32200 47150 200 0 360 10 darc
31897 47216 31796 47317 10 line
31796 47317 31845 47321 10 line
31845 47321 31743 47422 10 line
31982 47184 31882 47285 10 line
31882 47285 31931 47289 10 line
31931 47289 31830 47390 10 line
newpath
32200 47600
25
0 360 arc
fill
newpath
32200 47600
25
0 360 arc
fill
grestore
gsave
false false false false 202.222224 [(\\_RxE\\_) ] 0 38900 47300 180.555557 text
grestore
gsave
false false false false 202.222224 [(\\_RxW\\_) ] 0 38400 47300 180.555557 text
grestore
gsave
false false false false 202.222224 [(CLK) ] 0 38000 47300 180.555557 text
grestore
gsave
31100 45800 31300 45700 10 line
31300 45700 31100 45600 10 line
31100 45600 31300 45500 10 line
31300 45500 31100 45400 10 line
31100 45800 31300 45900 10 line
31300 45900 31200 45950 10 line
31200 46100 31200 45950 10 line
31200 45200 31200 45352 10 line
31100 45401 31200 45350 10 line
grestore
31200 47600 34300 47600 10 line
38700 43800 38700 41800 10 line
gsave
38700 41600 38700 41800 10 line
38600 41600 38800 41600 10 line
38655 41550 38745 41550 10 line
38680 41510 38720 41510 10 line
newpath
38700 41800
25
0 360 arc
fill
grestore
31200 46100 31200 47600 10 line
31200 45200 31200 41800 10 line
31200 41800 38700 41800 10 line
newpath
36000 43600
25
0 360 arc
fill
newpath
36000 43600
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 39200 43600 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
36000 43600
25
0 360 arc
fill
newpath
36300 43400
25
0 360 arc
fill
newpath
36300 43400
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 39200 43400 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
36300 43400
25
0 360 arc
fill
newpath
36600 43200
25
0 360 arc
fill
newpath
36600 43200
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 39200 43200 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
36600 43200
25
0 360 arc
fill
newpath
36900 43000
25
0 360 arc
fill
newpath
36900 43000
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 39200 43000 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
36900 43000
25
0 360 arc
fill
newpath
37200 42800
25
0 360 arc
fill
newpath
37200 42800
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 39200 42800 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
37200 42800
25
0 360 arc
fill
newpath
37500 42600
25
0 360 arc
fill
newpath
37500 42600
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 39200 42600 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
37500 42600
25
0 360 arc
fill
newpath
37800 42400
25
0 360 arc
fill
newpath
37800 42400
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 39200 42400 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
37800 42400
25
0 360 arc
fill
newpath
38100 42200
25
0 360 arc
fill
newpath
38100 42200
25
0 360 arc
fill
gsave
[ 1.00 -0.00 0.00 1.00 39200 42200 ] concat
newpath
-30 -30 moveto
-30 30 lineto
30 0 lineto
closepath
fill
grestore
newpath
38100 42200
25
0 360 arc
fill
newpath
34300 45900
25
0 360 arc
fill
newpath
34300 45900
25
0 360 arc
fill
newpath
34300 45900
25
0 360 arc
fill
newpath
34000 46000
25
0 360 arc
fill
newpath
34000 46000
25
0 360 arc
fill
newpath
34000 46000
25
0 360 arc
fill
newpath
33700 46100
25
0 360 arc
fill
newpath
33700 46100
25
0 360 arc
fill
newpath
33700 46100
25
0 360 arc
fill
newpath
33400 46200
25
0 360 arc
fill
newpath
33400 46200
25
0 360 arc
fill
newpath
33400 46200
25
0 360 arc
fill
newpath
33100 46300
25
0 360 arc
fill
newpath
33100 46300
25
0 360 arc
fill
newpath
33100 46300
25
0 360 arc
fill
newpath
32800 46400
25
0 360 arc
fill
newpath
32800 46400
25
0 360 arc
fill
newpath
32800 46400
25
0 360 arc
fill
newpath
32500 46500
25
0 360 arc
fill
newpath
32500 46500
25
0 360 arc
fill
newpath
32500 46500
25
0 360 arc
fill
newpath
32200 46600
25
0 360 arc
fill
newpath
32200 46600
25
0 360 arc
fill
newpath
32200 46600
25
0 360 arc
fill
60 60 38170 47170 fbox
60 60 38570 47170 fbox
60 60 38970 47170 fbox
newpath
34000 47600
25
0 360 arc
fill
newpath
34000 47600
25
0 360 arc
fill
newpath
33700 47600
25
0 360 arc
fill
newpath
33700 47600
25
0 360 arc
fill
newpath
33400 47600
25
0 360 arc
fill
newpath
33400 47600
25
0 360 arc
fill
newpath
33100 47600
25
0 360 arc
fill
newpath
33100 47600
25
0 360 arc
fill
newpath
32800 47600
25
0 360 arc
fill
newpath
32800 47600
25
0 360 arc
fill
newpath
32500 47600
25
0 360 arc
fill
newpath
32500 47600
25
0 360 arc
fill
newpath
32200 47600
25
0 360 arc
fill
newpath
32200 47600
25
0 360 arc
fill
newpath
34000 47600
25
0 360 arc
fill
newpath
33700 47600
25
0 360 arc
fill
newpath
33400 47600
25
0 360 arc
fill
newpath
33100 47600
25
0 360 arc
fill
newpath
32800 47600
25
0 360 arc
fill
newpath
32500 47600
25
0 360 arc
fill
newpath
32200 47600
25
0 360 arc
fill
newpath
38700 41800
25
0 360 arc
fill
newpath
38700 41800
25
0 360 arc
fill
newpath
38700 41800
25
0 360 arc
fill
showpage
%%End
